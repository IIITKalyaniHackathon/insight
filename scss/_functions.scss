$defaults: (
    width: 100%,
    columns: 12,
    font-size-base: 16px
);

// Get/add a value to the settings. Return the value for the key
@function settings($key, $values...) {
    @if global-variable-exists(settings) {
        $defaults: map-merge($defaults, $settings)
    }

    @if length($values) > 0 {
        @if length($values) == 1 {
            $values: nth($values, 1);
        }
        $new: ($key: $values);
        $defaults: map-merge($defaults, $new);
    }
    @return map-get($defaults, $key);
}

// Calculate the column width with respect to the container width
@function column-width($cols) {
    @return settings(width) / $cols;
}

// Calculate the width for a container of $n of $cols columns
@function span($n, $cols: settings(columns)) {
    @return percentage($n * column-width($cols) / settings(width));
}

/// Convert angle
/// Source: http://sassmeister.com/gist/b58f6e2cc3160007c880
/// @author Chris Eppstein
/// @param {Number} $value - Value to convert
/// @param {String} $unit - Unit to convert to
/// @return {Number} Converted angle
@function convert-angle($value, $unit) {
    $convertable-units: deg grad turn rad;
    $conversion-factors: 1 (10grad/9deg) (1turn/360deg) (3.1415926rad/180deg);
    @if index($convertable-units, unit($value)) and index($convertable-units, $unit) {
        @return $value
                 / nth($conversion-factors, index($convertable-units, unit($value)))
                 * nth($conversion-factors, index($convertable-units, $unit));
    }

    @warn "Cannot convert `#{unit($value)}` to `#{$unit}`.";
}

/// Test if `$value` is an angle
/// Source: http://sassmeister.com/gist/b58f6e2cc3160007c880
/// @param {*} $value - Value to test
/// @return {Bool}
@function is-direction($value) {
    $is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
    $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

    @return $is-direction or $is-angle;
}

/// Convert a direction to legacy syntax
/// Source: http://sassmeister.com/gist/b58f6e2cc3160007c880
/// @param {Keyword | Angle} $value - Value to convert
/// @require {function} is-direction
/// @require {function} convert-angle
@function legacy-direction($value) {
    @if is-direction($value) == false {
        @warn "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction";
    }

    $conversion-map: (
        to top          : bottom,
        to top right    : bottom left,
        to right top    : left bottom,
        to right        : left,
        to bottom right : top left,
        to right bottom : left top,
        to bottom       : top,
        to bottom left  : top right,
        to left bottom  : right top,
        to left         : right,
        to left top     : right bottom,
        to top left     : bottom right
    );

    @if map-has-key($conversion-map, $value) {
        @return map-get($conversion-map, $value);
    }

    @return 90deg - convert-angle($value, 'deg');
}


// Calculate a size in rem
@function rem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}
